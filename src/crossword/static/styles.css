/* static/styles.css */
:root {
    --cell-size: 3.5rem;
    --border-width: 1px;
    --cell-border: color-mix(in srgb, currentColor 20%, transparent);
    --cell-bg: color-mix(in srgb, Canvas 95%, currentColor);
    --cell-focus-bg: color-mix(in srgb, Canvas 85%, currentColor);
    --cell-text: currentColor;
    --font-system: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', 
                   Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
    --correct-color: #2e7d32;
    --incorrect-color: #cc0000;
    --correct-bg: rgba(46, 125, 50, 0.3);
    --incorrect-bg: rgba(255, 200, 200, 0.7);
    --heatmap-cell-size: 12px;
    --heatmap-gap: 2px;
    --heatmap-day-label-width: 30px;
    --heatmap-cell-eff-width: calc(var(--heatmap-cell-size) + var(--heatmap-gap));
    --heatmap-grid-cols: 53;
    --heatmap-grid-content-width: calc(var(--heatmap-grid-cols) * var(--heatmap-cell-eff-width));
    --heatmap-year-content-width: calc(var(--heatmap-day-label-width) + var(--heatmap-grid-content-width) + 5px);
}

/* Reset body margins and set full viewport coverage */
body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    min-width: 100vw;
    overflow-x: hidden;  /* Prevent horizontal scrolling */
    font-family: var(--font-system);
}

#app {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;
    width: 100vw;
}

#notmenu {
    display: flex;
    gap: 0;
    padding: 0;
    margin: 0;
    min-height: 100vh;
    width: 100vw;
    overflow: hidden;  /* Prevent overflow */
}

.center-column {
    flex: 0 1 auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
    background-color: var(--cell-bg);
    margin: 0;
}

#crossword-container {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    padding: 0 0.5rem;
}

#menu {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    justify-content: center;
    padding: 0.75rem;
    max-width: fit-content;
    align-items: center;
}

#menu button {
    font-size: 0.9rem;
    padding: 0.4rem 0.6rem;
    border-radius: 4px;
    border: 2px solid var(--cell-border);
    background-color: var(--cell-bg);
    color: var(--cell-text);
    cursor: pointer;
    font-weight: bold;
    transition: all 0.2s ease;
    min-width: 3.5rem;
}

#menu button:hover {
    background-color: var(--cell-focus-bg);
}

/* Remove all the weekday-specific styles */
#monday, #tuesday, #wednesday, #thursday, #friday {
    /* Use the same style as other buttons */
    background-color: var(--cell-bg);
    border-color: var(--cell-border);
    color: var(--cell-text);
}

#monday:hover, #tuesday:hover, #wednesday:hover, #thursday:hover, #friday:hover {
    background-color: var(--cell-focus-bg);
}

#check-all {
    background-color: #ffffff;
    border-color: #cccccc;
    color: #333333;
}

#check-all:hover {
    background-color: #f0f0f0;
}

#menu button {
    font-size: 0.9rem;
    padding: 0.5rem 1rem;  /* Made slightly larger */
    border-radius: 6px;    /* More rounded corners */
    border: 2px solid;     /* Slightly thicker border */
    cursor: pointer;
    font-weight: bold;     /* Make text bold */
    transition: all 0.2s ease; /* Smooth transition for hover effects */
}

#menu button:hover {
    transform: translateY(-1px); /* Slight lift effect on hover */
    box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Add shadow on hover */
}

.grid {
    display: grid;
    width: fit-content;
    border: none;
    padding-right: 1px;
    padding-bottom: 1px;
}

.grid-row {
    display: grid;
}

.grid-cell {
    position: relative;
    width: var(--cell-size);
    height: var(--cell-size);
    border: var(--border-width) solid var(--cell-border);
    margin-right: -1px;
    margin-bottom: -1px;
    background-color: var(--cell-bg);
}

.grid-cell:last-child {
    border-right: var(--border-width) solid var(--cell-border);
}

.grid-row:last-child .grid-cell {
    border-bottom: var(--border-width) solid var(--cell-border);
}

.grid-cell input {
    width: 100%;
    height: 100%;
    border: none;
    background: none;
    text-align: center;
    font-size: 1.5rem;
    font-weight: 500;
    color: var(--cell-text);
    text-transform: uppercase;
    padding: 0;
}

.grid-cell input:focus {
    outline: none;
    background-color: var(--cell-focus-bg);
}

.black-cell {
    background-color: black;
}

.clue-index {
    position: absolute;
    top: 2px;
    left: 2px;
    font-size: 0.75rem;
    color: var(--cell-text);
    opacity: 0.7;
}

/* Hint container styles */
#hint-container {
    flex: 1;
    display: flex;
    gap: 2rem;
    height: 100%;
}

#across, #down {
    flex: 1;
    margin: 0;
    padding: 0;
    border: none;
    border-radius: 0;
    overflow-y: visible;
}

.state {
    font-family: var(--font-system);
    width: 1.5rem;
    height: 1.5rem;
    border: var(--border-width) solid var(--cell-border);
    display: inline-flex;
    justify-content: center;
    align-items: center;
    margin: 0;
    text-align: center;
    line-height: 1;
    padding: 0;
    font-size: 1rem;
    font-weight: 500;
    vertical-align: middle;
    color: var(--cell-text);
    background-color: rgba(255, 255, 255, 0.6);
}

/* Style for the clue list items */
#across li, #down li {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    font-size: 1.15rem;
    line-height: 1.3;
    align-items: center;
    padding: 0.25rem;
}

/* Style for the clue text */
#across li span:first-child, #down li span:first-child {
    margin-bottom: 0;
    flex: 1 1;
    font-weight: 450;
}

/* Container for the state boxes */
#across li > span:not(:first-child), #down li > span:not(:first-child) {
    display: inline-flex;
    flex-wrap: nowrap;
    align-items: center;
    gap: 0.15rem;
    flex: 0 0 auto;
    font-size: 1rem;
}

/* Add hover effect for clues */
#across li:hover, #down li:hover {
    background-color: var(--cell-focus-bg);
    border-radius: 4px;
}

/* Style for clue headers */
#hint-container h2, .clue-column h2 {
    display: none;
}

/* Wrap each list in a container */
.clue-column {
    flex: 1 1 40%;
    display: flex;
    flex-direction: column;
    height: 100vh;
    margin: 0;
    padding: 0;
    overflow-y: auto;
    position: relative;
    isolation: isolate;
}

/* Add scrollbar styling for a cleaner look */
#across, #down {
    scrollbar-width: thin;
    scrollbar-color: var(--cell-border) transparent;
}

#across::-webkit-scrollbar, #down::-webkit-scrollbar {
    width: 6px;
}

#across::-webkit-scrollbar-thumb, #down::-webkit-scrollbar-thumb {
    background-color: var(--cell-border);
    border-radius: 3px;
}

.clue-column::-webkit-scrollbar {
    width: 8px;
}

.clue-column::-webkit-scrollbar-thumb {
    background-color: var(--cell-border);
    border-radius: 4px;
}

/* Add these styles for the state container */
.state-container {
    display: inline-flex;
    flex-wrap: nowrap;
    align-items: center;
    gap: 0.15rem;
    flex: 0 0 auto;
    line-height: 1.5rem;
}

/* Add styles for check states */
.state.red {
    color: #cc0000;
    border-color: #ff4444;
    background-color: rgba(255, 200, 200, 0.7);
}

.state.green {
    color: #006600;
    border-color: #00cc00;
    background-color: rgba(200, 255, 200, 0.7);
}

/* Revise background labels */
.clue-column::before {
    content: attr(data-label);
    position: sticky;  /* Change back to absolute */
    inset: 0;           /* Cover the entire column */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: clamp(6rem, 15vw, 12rem);
    font-weight: 900;
    opacity: 0.09;
    color: currentColor;
    pointer-events: none;
    white-space: nowrap;
    letter-spacing: 0.2em;
    font-family: var(--font-system);
    z-index: -1;
    writing-mode: vertical-lr;
    text-orientation: mixed;
    transform: rotate(180deg);
}
.clue-column
/* Ensure content stays above the background */
#across, #down {
    position: absolute;
    z-index: 1;
}

/* Theme switch styles */
.theme-switch {
    display: flex;
    align-items: center;
}

.switch {
    position: relative;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: relative;
    display: inline-block;
    width: 2.6rem;
    height: 1.4rem;
    background-color: var(--cell-border);
    border-radius: 1.4rem;
    transition: 0.4s;
}

.slider:before {
    position: absolute;
    content: "";
    height: 1rem;
    width: 1rem;
    left: 0.2rem;
    bottom: 0.2rem;
    background-color: var(--cell-bg);
    border-radius: 50%;
    transition: 0.4s;
}

input:checked + .slider {
    background-color: var(--cell-text);
}

input:checked + .slider:before {
    transform: translateX(1.2rem);
    background-color: var(--cell-bg);
}

.switch-label {
    font-size: 0.9rem;
    user-select: none;
    color: var(--cell-text);
}

/* Add these styles for the input cell states */
.grid-cell input.red {
    color: var(--incorrect-color);
    background-color: var(--incorrect-bg);
    font-weight: 600;
    border-color: #ff4444;
}

.grid-cell input.green {
    background-color: var(--correct-bg);
    color: var(--correct-color);
    border-color: var(--correct-color);
}

.grid-cell input.revealed {
    background-color: color-mix(in srgb, var(--cell-focus-bg) 70%, yellow);
    color: color-mix(in srgb, var(--cell-text) 70%, navy);
    font-weight: bold;
    /* If you want to make it look obviously different from user input */
    /* border: 2px dashed orange; */
}

.cache-count {
    font-size: 0.75em;  /* Slightly smaller font */
    color: #666;
    margin-left: 2px;  /* Reduced margin */
}

.status-indicators {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 10px 0;
    font-size: 0.9em;
}

.offline-indicator {
    background-color: #ff9800;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    margin-bottom: 5px;
}

.cache-status {
    color: #666;
    font-style: italic;
}

.weekday-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;  /* Reduced gap */
    justify-content: center;
    margin: 8px 0;  /* Slightly reduced margin */
}

#menu button {
    position: relative;
    padding: 8px 16px;
}

/* New Modal Styles */
#overview-button {
    /* Style like other menu buttons, or add specific styling */
    /* Re-using existing button styles from #menu button */
}

.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000; /* Ensure it's on top */
}

.modal-content {
    background-color: var(--cell-bg);
    color: var(--cell-text);
    padding: 1.5rem; /* Adjusted padding */
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0,0,0,0.3);
    width: 95vw;    /* Make it wider */
    max-width: none;  /* Remove max-width if previously set */
    height: 90vh;   /* Make it taller */
    display: flex;
    flex-direction: column;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid var(--cell-border);
    padding-bottom: 1rem;
    margin-bottom: 1rem;
}

.modal-header h2 {
    margin: 0;
    font-size: 1.5rem;
}

.modal-close-button {
    background: none;
    border: none;
    font-size: 2rem;
    line-height: 1;
    color: var(--cell-text);
    cursor: pointer;
    opacity: 0.7;
}

.modal-close-button:hover {
    opacity: 1;
}

.modal-body {
    overflow-y: auto; /* Scroll for long lists */
    flex-grow: 1;
}

.solved-day-section h3 {
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    font-size: 1.2rem;
    color: var(--cell-text);
}

.solved-day-section ul {
    list-style-type: none;
    padding-left: 0;
}

.solved-day-section li {
    padding: 0.25rem 0;
    font-size: 0.9rem;
    border-bottom: 1px dashed var(--cell-border);
}

.solved-day-section li:last-child {
    border-bottom: none;
}

.modal-body p {
    text-align: center;
    color: #666;
}

/* Heatmap Styles */
.heatmap-container {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid #eee;
}

.yearly-heatmap-section {
    margin-bottom: 2rem; /* Space between yearly heatmaps */
}

.yearly-heatmap-section h4 {
    text-align: center;
    margin-bottom: 1rem;
    font-size: 1.2rem;
    color: var(--cell-text);
}

.heatmap-months {
    display: grid;
    /* We have 12 month labels. The grid below has ~53 columns (weeks). */
    /* This will distribute the 12 labels across the available space. */
    grid-template-columns: repeat(12, 1fr);
    margin-left: 30px; /* Space for day labels */
    margin-bottom: 0.25rem;
    font-size: 0.7rem;
    color: var(--cell-text);
    /* width: calc(53 * (var(--heatmap-cell-size, 12px) + var(--heatmap-gap, 2px))); Remove fixed width to allow 1fr to work*/
    padding-right: calc(var(--heatmap-cell-size, 12px) + var(--heatmap-gap, 2px)); /* Ensure it aligns with the grid below */
}

.heatmap-month-label {
    text-align: left;
    overflow: visible; /* Allow text to flow a bit if needed */
    white-space: nowrap;
    /* Each month label will take up its share of the 12 columns */
    /* Roughly 53 weeks / 12 months = ~4.4 weeks per month label space */
}

.heatmap-body {
    display: flex;
}

.heatmap-day-labels {
    display: grid;
    grid-template-rows: repeat(7, var(--heatmap-cell-size, 12px));
    grid-auto-flow: row;
    grid-gap: var(--heatmap-gap, 2px);
    font-size: 0.7rem;
    color: var(--cell-text);
    margin-right: 5px;
    flex-shrink: 0;
}

.heatmap-day-label {
    line-height: var(--heatmap-cell-size, 12px);
}
/* Only show Mon, Wed, Fri labels by targeting specific rows (1st, 3rd, 5th visible day from Sunday) */
.heatmap-day-label:nth-child(2), /* Mon */
.heatmap-day-label:nth-child(4), /* Wed */
.heatmap-day-label:nth-child(6)  /* Fri */
{
    visibility: visible;
}
.heatmap-day-label:nth-child(1),
.heatmap-day-label:nth-child(3),
.heatmap-day-label:nth-child(5),
.heatmap-day-label:nth-child(7) {
    visibility: hidden;
}


.heatmap-grid {
    display: grid;
    grid-template-rows: repeat(7, var(--heatmap-cell-size, 12px));
    grid-auto-flow: column; /* This is key for the GitHub-style layout */
    grid-gap: var(--heatmap-gap, 2px);
}

.heatmap-cell {
    width: var(--heatmap-cell-size, 12px);
    height: var(--heatmap-cell-size, 12px);
    background-color: #ebedf0; /* Default GitHub-like color for empty/unsolved */
    border-radius: 2px;
}

.heatmap-cell.solved {
    background-color: #2e7d32; /* Green for solved */
}

.heatmap-cell.future {
    background-color: #f8f9fa; /* Lighter for future dates, if any */
    /* visibility: hidden; */ /* Optionally hide future cells */
}

.heatmap-cell.empty-offset {
    background-color: transparent; /* Or a very light grey like #fdfdfd */
    visibility: hidden; /* Make them take space but be invisible */
}

.heatmap-legend {
    margin-top: 0.5rem;
    font-size: 0.8rem;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    color: var(--cell-text);
}

.heatmap-legend .heatmap-cell {
    margin: 0 0.25rem;
    display: inline-block; /* Allow legend cells to sit with text */
}

.legend-sample-unsolved {
     background-color: #ebedf0;
}
.legend-sample-solved {
    background-color: #2e7d32;
}

/* New container for the yearly heatmaps to enable multi-column layout */
.heatmap-outer-container {
    display: grid;
    /* Each column should be able to fit one year's heatmap content + its padding */
    /* Assuming .yearly-heatmap-section has 1rem (16px) padding on each side: total 32px horizontal padding */
    grid-template-columns: repeat(auto-fit, minmax(calc(var(--heatmap-year-content-width) + 32px), 1fr));
    gap: 2rem;
    width: 100%;
    padding: 1rem; /* Add some padding to the outer container */
    box-sizing: border-box;
}

.yearly-heatmap-section {
    padding: 1rem;
    border: 1px solid var(--cell-border);
    border-radius: 4px;
    /* Ensure the section itself doesn't try to be wider than its defined content width */
    width: var(--heatmap-year-content-width);
    box-sizing: content-box; /* Padding & border are outside this width */
    margin: 0 auto; /* Center if the grid column is wider */
}

.yearly-heatmap-section h4 {
    text-align: center;
    margin-bottom: 1rem;
    font-size: 1.2rem;
    color: var(--cell-text);
}

.heatmap-months {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    /* This margin aligns month labels with the start of the day grid */
    margin-left: calc(var(--heatmap-day-label-width) + 5px); 
    /* The width should be that of the day grid itself */
    width: var(--heatmap-grid-content-width);
    box-sizing: border-box;
    margin-bottom: 0.25rem;
    font-size: 0.7rem;
    color: var(--cell-text);
}

.heatmap-month-label {
    text-align: left;
    overflow: visible;
    white-space: nowrap;
}

.heatmap-body {
    display: flex;
    /* This body should take up the full defined content width for a year */
    width: var(--heatmap-year-content-width);
    box-sizing: border-box;
}

.heatmap-day-labels {
    width: var(--heatmap-day-label-width);
    grid-template-rows: repeat(7, var(--heatmap-cell-size)); /* Use cell-size directly */
    grid-auto-flow: row;
    grid-gap: var(--heatmap-gap);
    font-size: 0.7rem;
    color: var(--cell-text);
    margin-right: 5px;
    flex-shrink: 0;
    box-sizing: border-box;
}

.heatmap-day-label {
    height: var(--heatmap-cell-size); /* Ensure height matches cells */
    line-height: var(--heatmap-cell-size);
}
/* ... existing visibility rules for day labels ... */

.heatmap-grid {
    display: grid;
    grid-template-rows: repeat(7, var(--heatmap-cell-size));
    grid-auto-flow: column;
    grid-gap: var(--heatmap-gap);
    width: var(--heatmap-grid-content-width); /* Explicit width */
    flex-shrink: 0;
    box-sizing: border-box;
    /* overflow-x: auto; /* Consider if still needed, explicit width should prevent overflow */
}

.utility-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem; /* Same gap as main menu buttons */
    justify-content: center;
    margin-top: 0.5rem; /* Space above this row */
    width: 100%; /* Allow buttons to center properly */
}

/* Styles for Raw Data Modal */
.raw-data-modal-content {
    width: 80vw; /* Or adjust as needed */
    max-width: 1000px; /* Limit very large screens */
    height: 70vh;
}

#raw-data-display {
    font-family: monospace;
    white-space: pre-wrap; /* Allows wrapping but preserves formatting */
    word-break: break-all; /* Break long strings if necessary */
    background-color: var(--cell-bg); /* Match theme */
    color: var(--cell-text);
    padding: 1rem;
    border-radius: 4px;
    border: 1px solid var(--cell-border);
    height: 100%; /* Fill modal body */
    overflow-y: auto; /* Scroll if content exceeds height */
    box-sizing: border-box;
}